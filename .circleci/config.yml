version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  aws-ecr: circleci/aws-ecr@8.2.1
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:8-buster-node-browsers-legacy
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD

jobs:
  build_and_push_tag_image:
    executor: docker-executor
    environment:
      JVM_OPTS: -Xmx512m
      TERM: dumb  
      GITHUB_TOKEN: ${GITHUB_TOKEN}  # Add the GitHub token as an environment variable

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - kubernetes/install-kubectl
      - checkout
      - run:
          name: Build and Push Docker tag Image
          command: |
            # Set environment variables
            IMAGE_TAG=$CIRCLE_TAG

            # Check if the Docker image with the same tag already exists in Docker Hub
            if curl -s -f -u "$DOCKERHUB_USERNAME":"$DOCKERHUB_PASSWORD" "https://hub.docker.com/v2/repositories/openmf/ph-ee-operations-app/tags/$IMAGE_TAG" > /dev/null; then
              echo "Skipping the build and push as the tag $IMAGE_TAG already exists in Docker Hub."
              exit 0
            fi

            # Build and tag the Docker image
            ./gradlew clean
            ./gradlew bootJar
            docker build -t "openmf/ph-ee-operations-app:$IMAGE_TAG" .

            # Push the Docker image to Docker Hub
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            docker push "openmf/ph-ee-operations-app:$IMAGE_TAG"

          # when: always  # The job will be executed even if there's no match for the tag filter
  
  build_and_push_latest_image:
    executor: docker-executor
    environment:
      JVM_OPTS: -Xmx512m
      TERM: dumb

    steps:
      - checkout
      # Install Docker to build and push the image
      - setup_remote_docker:
          version: 20.10.14
      - kubernetes/install-kubectl
      - checkout
      # Build the Docker image
      - run:
          name: Build Docker image
          command: |
            ./gradlew clean
            ./gradlew bootJar
            docker build -t openmf/ph-ee-operations-app:latest .

      # Log in to DockerHub using environment variables
      - run:
          name: Login to DockerHub
          command: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      # Push the Docker image to DockerHub
      - run:
          name: Push Docker image to DockerHub
          command: docker push openmf/ph-ee-operations-app:latest

      - run: |
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts

      - run:
          name: Restart Pod
          command: |
            kubectl delete pod ph-ee-operations-app -n paymenthub

  upgrade-helm-chart:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: "sit"
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
          namespace: paymenthub
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          wait: true
          timeout: "300s"
      - run: |
          kubectl config use-context arn:aws:eks:$REGION:419830066942:cluster/sit
          kubectl config get-contexts
          kubectl delete pod ph-ee-operations-app -n paymenthub

  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@gov"
      - store_test_results:
          path: /build/cucumber.xml
      - store_artifacts:
          path: /build/reports/tests/test
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: cd ph-ee-integration-test && ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: /build/cucumber.xml
      - store_artifacts:
          path: /build/reports/tests/test


workflows:
  version: 2
  build-and-push:
    jobs:
      - build_and_push_tag_image:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/  # Match tags in the format v1.2.3
          context:
              - DOCKER
      - build_and_push_latest_image:
          context:
              - DOCKER
              - AWS
      - upgrade-helm-chart:
          cluster-name: sit
          requires:
            - build_and_push_latest_image
          context:
            - AWS
      - test-chart-gov:
          requires:
            - upgrade-helm-chart
          context:
            - AWS
            - Helm
            - slack
      - test-chart-ams:
          requires:
            - upgrade-helm-chart
          context:
            - AWS
            - Helm
            - slack

             
